import random

class Agent():

	def __init__(self, group_str):
		"""
		When we make an agent, weâ€™ll pass a string (X or O as a constructor).  
		In the constructor, the agent should randomly decide on a 
		threshold that should be a random between 0.1 and 0.9.
		"""
		self.group = group_str

		# generates a random number between 0.1 and 0.9 (inclusive)
		# and rounds it to the hundredths place
		self.threshold = round(random.uniform(0.1, 0.9), 2)

	def __str__(self):
		return self.group

	def compare(self, other):
		"""
		This method should take in another Agent object
		return true if both the current object 
		and this one are of the same group.
		"""

		if other is None:
			return False
		
		return self.group == other.group

	def is_satisfied(self, agent_list):
		"""
		This method will take in a list of neighboring agents 
		(generated by our City class) and return True if the 
		agent is satisfied (meaning it passes the threshold).  
		
		Be advised!  There will be elements in this list that
		are None type.
		"""

		same_neighbor = 0
		occupied = 0

		for i in agent_list:
			if i is not None:
				occupied += 1
				if self.compare(i):
					same_neighbor += 1

		if occupied == 0:
			return False
		
		return (same_neighbor / occupied) >= self.threshold

